name: Publish to PyPI and GitHub Release

on:
  push:
    tags:
      - "v*.*.*" # Trigger on version tags, e.g., v1.0.0

jobs:
  build:
    name: Build distribution ðŸ“¦
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10" # Adjust Python version as needed

      - name: Install Poetry
        uses: snok/install-poetry@v1.4.1
        with:
          version: 1.5.1 # You can adjust this version
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cache-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install

      - name: Build distribution packages
        run: poetry build

      - name: Upload distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  # publish-to-pypi:
  #   name: Publish to PyPI ðŸ“¦
  #   if: startsWith(github.ref, 'refs/tags/')
  #   needs: build
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: pypi
  #     url: https://pypi.org/project/adora

  #   permissions:
  #     id-token: write # Allows the action to authenticate with PyPI

  #   steps:
  #     - name: Download distribution packages
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: python-package-distributions
  #         path: dist/

  #     - name: Publish to PyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Create GitHub Release and upload assets
    needs: publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write # Required for creating GitHub releases
      id-token: write # Required for signing packages

    steps:
      - name: Download distribution packages
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref_name }} ./dist/* \
            --repo ${{ github.repository }} \
            --title "Release ${{ github.ref_name }}" \
            --notes "Release Notes for ${{ github.ref_name }}"
      
      # - name: Create GitHub Release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     gh release create ${{ github.ref_name }} ./dist/* --repo ${{ github.repository }} --title "Release ${{ github.ref_name }}" --notes "Release Notes for ${{ github.ref_name }}"

      # - name: Upload assets to GitHub Release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     gh release upload ${{ github.ref_name }} ./dist/* --repo ${{ github.repository }}
